name: Playwright E2E

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci

      - name: Install server dependencies
        run: |
          # If server has a package-lock.json prefer npm ci; otherwise fall back to npm install.
          # This avoids failure when lockfile is missing on the runner.
          cd server && if [ -f package-lock.json ]; then npm ci; else npm install --no-audit --prefer-offline --no-fund; fi

      - name: Install Playwright browsers
        run: |
          npx playwright install --with-deps

      - name: Start database (Docker Compose)
        run: |
          docker compose -f server/docker-compose.yml up -d

      - name: Wait for Postgres
        run: |
          # Wait for Postgres on port 55432 (mapped to container 5432)
          npx wait-on tcp:localhost:55432 --timeout 60000

      - name: Run Prisma migrations
        run: |
          cd server && npx prisma migrate deploy --schema=prisma/schema.prisma
        env:
          DATABASE_URL: "postgresql://phelper:phelperpass@localhost:55432/phelperdb"

      - name: Generate Prisma client
        run: |
          cd server && npx prisma generate --schema=prisma/schema.prisma
        env:
          DATABASE_URL: "postgresql://phelper:phelperpass@localhost:55432/phelperdb"

      - name: Start backend server
        run: |
          cd server && npx ts-node-dev --respawn --transpile-only src/server.ts &
        env:
          NODE_ENV: test
          DATABASE_URL: "postgresql://phelper:phelperpass@localhost:55432/phelperdb"

      - name: Dump backend process info (for debugging)
        run: |
          # give the server a moment to start
          sleep 2
          echo "=== Processes ==="
          ps aux | sed -n '1,200p'
          echo "=== Listening ports ==="
          ss -ltnp || true
          echo "=== Recent syslog (if available) ==="
          # show recent system logs in case the server failed to start (may be empty on GH runners)
          sudo journalctl -n 200 --no-pager || true
        env:
          NODE_ENV: test
          DATABASE_URL: "postgresql://phelper:phelperpass@localhost:55432/phelperdb"

      - name: Build frontend
        run: |
          npm run build

      - name: Start frontend preview
        run: |
          # Wait a short time for backend to begin accepting connections (non-fatal)
          npx wait-on http://localhost:4000/api/health --timeout 30000 || true
          npm run preview -- --port 5173 --strictPort &

      - name: Wait for services
        run: |
          npx wait-on http://localhost:5173 http://localhost:4000/api/health --timeout 60000

      - name: Run Playwright tests
        run: |
          npm run e2e -- --reporter=list
