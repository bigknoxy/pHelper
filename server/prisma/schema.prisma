// Prisma schema for pHelper persistent storage
// See design/persistence-postgres.md for details

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  passwordHash String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  weights      WeightEntry[]
  workouts     Workout[]
  tasks        Task[]
  goals        Goal[]
}

model WeightEntry {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  date      DateTime
  weight    Float
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Workout {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  date      DateTime
  type      String
  duration  Int
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id          String     @id @default(uuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  title       String
  description String?
  status      TaskStatus @default(PENDING)
  dueDate     DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Goal {
  id          String       @id @default(uuid())
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  title       String
  description String?
  target      Float
  current     Float        @default(0)
  unit        String
  category    GoalCategory
  status      GoalStatus   @default(ACTIVE)
  deadline    DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

enum TaskStatus {
  PENDING
  COMPLETED
  ARCHIVED
}

enum GoalCategory {
  WEIGHT
  WORKOUTS
  TASKS
}

enum GoalStatus {
  ACTIVE
  COMPLETED
  PAUSED
  CANCELLED
}
